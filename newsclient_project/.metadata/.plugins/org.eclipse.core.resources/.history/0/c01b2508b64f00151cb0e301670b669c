package com.example.newsclient.adapter;

import java.util.ArrayList;
import java.util.List;

import android.content.Context;
import android.graphics.Bitmap;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.os.Parcel;
import android.os.Parcelable;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import com.android.volley.RequestQueue;
import com.android.volley.toolbox.Volley;
import com.example.newsclient.R;
import com.example.newsclient.bean.HttpGetDataBean;
import com.example.newsclient.bean.HttpGetDataBeanOne;
import com.example.newsclient.httpclient.HttpGetBitmapTool;
import com.example.newsclient.httpclient.HttpGetBitmapTool.BitmapNotifi;

public class ListContentHeadAdapter extends BaseAdapter {
	private List<HttpGetDataBeanOne> mList = new ArrayList<HttpGetDataBeanOne>();
	private static final int LIST_ITEM_CONTENT = 2;// 表示ListAdapter显示的数据有2中类型
	private static final int LIST_ITEM_CONTENT_ONE = 0;// 区分类型的:第一种类型
	private static final int LIST_ITEM_CONTENT_TWO = 1;// 区分类型的:第二种类型
	private LayoutInflater infalter;
	private HttpGetBitmapTool mHttpGetBitmapTool;
	private Handler handler = new Handler() {
		public void handleMessage(android.os.Message msg) {
			if (msg.what == 1) {
				ImageView imgBitmap =  (ImageView) msg.obj;
				imgBitmap.setImageResource(R.drawable.moren_bitmap);
			}
		};
	};
	private Context cont;
	public ListContentHeadAdapter(Context context) {
		infalter = LayoutInflater.from(context);
		cont = context;
		mHttpGetBitmapTool = HttpGetBitmapTool.setIntanceCaseBitmap();
	}

	public int getCount() {
		return mList.size();
	}

	public void setData(List<HttpGetDataBeanOne> list) {
		mList = list;
		notifyDataSetChanged();
	}

	public void addData(List<HttpGetDataBeanOne> list) {
		mList = list;
		notifyDataSetChanged();
	}

	public int getViewTypeCount() {
		return LIST_ITEM_CONTENT;
	}

	public int getItemViewType(int position) {
		HttpGetDataBeanOne bean = (HttpGetDataBeanOne) getItem(position);
		if (bean.getImgStringList() != null) {
		}
		if (bean.getImgStringList() != null) {
			return LIST_ITEM_CONTENT_TWO;
		} else {
			return LIST_ITEM_CONTENT_ONE;
		}
	}

	public Object getItem(int position) {
		return mList.get(position);
	}

	public long getItemId(int position) {
		return position;
	}

	public View getOneView(int position, View convertView, ViewGroup parent) {

		final ItemOneView mItemOneView;
		if (convertView == null) {
			convertView = infalter.inflate(
					R.layout.list_item_content_one_layout, null);
			mItemOneView = new ItemOneView();
			mItemOneView.itemOneImg = (ImageView) convertView
					.findViewById(R.id.list_item_one_img);
			mItemOneView.itemOneTitleTxt = (TextView) convertView
					.findViewById(R.id.list_item_one_title);
			mItemOneView.itemOneContentTxt = (TextView) convertView
					.findViewById(R.id.list_item_one_content);
			mItemOneView.itemOneFollowTxt = (TextView) convertView
					.findViewById(R.id.list_item_one_follow);
			convertView.setTag(mItemOneView);
		} else {
			mItemOneView = (ItemOneView) convertView.getTag();
		}
		HttpGetDataBeanOne bean = (HttpGetDataBeanOne) getItem(position);

		mItemOneView.itemOneTitleTxt.setText(bean.getTitle());
		mItemOneView.itemOneContentTxt.setText(bean.getDigest());
		String reply = bean.getReplyCount();
		Log.i("11","reply::"+reply);
		if (reply != null) {
			mItemOneView.itemOneFollowTxt.setText(bean.getReplyCount() + "跟帖");
		}else{
			mItemOneView.itemOneFollowTxt.setText("");
		}
		String urls = bean.getImgsrc();
		AsyncImg(urls, mItemOneView.itemOneImg);
		return convertView;
	}

	public View getTwoView(int position, View convertView, ViewGroup parent) {
		final ItemTwoView mItemOneView;
		if (convertView == null) {
			convertView = infalter.inflate(
					R.layout.list_item_content_two_layout, null);
			mItemOneView = new ItemTwoView();
			mItemOneView.itemTwoImgOne = (ImageView) convertView
					.findViewById(R.id.list_item_two_img_one);
			mItemOneView.itemTwoImgTwo = (ImageView) convertView
					.findViewById(R.id.list_item_two_img_two);
			mItemOneView.itemTwoImgThree = (ImageView) convertView
					.findViewById(R.id.list_item_two_img_three);
			mItemOneView.itemTwoTitleTxt = (TextView) convertView
					.findViewById(R.id.list_item_two_title);
			mItemOneView.itemTwoFollowTxt = (TextView) convertView
					.findViewById(R.id.list_item_two_follow);

			convertView.setTag(mItemOneView);
		} else {
			mItemOneView = (ItemTwoView) convertView.getTag();
		}
		HttpGetDataBeanOne bean = (HttpGetDataBeanOne) getItem(position);

		mItemOneView.itemTwoTitleTxt.setText(bean.getTitle());
		if (!bean.getReplyCount().equals("")) {
			mItemOneView.itemTwoFollowTxt.setText(bean.getReplyCount() + "跟帖");
		}
		String urls = bean.getImgsrc();
		String[] imgUrlList = bean.getImgStringList();
		
		Log.i("11",urls);
		Log.i("11",imgUrlList[0]);
		Log.i("11",imgUrlList[1]);
		
		
		// 横向的3张图片
		AsyncImg(urls, mItemOneView.itemTwoImgOne);
		AsyncImg(imgUrlList[0], mItemOneView.itemTwoImgTwo);
		AsyncImg(imgUrlList[1], mItemOneView.itemTwoImgThree);

		return convertView;
	}

	public View getView(int position, View convertView, ViewGroup parent) {
		if (getItemViewType(position) == LIST_ITEM_CONTENT_ONE) {
			convertView = getOneView(position, convertView, parent);
		} else {
			convertView = getTwoView(position, convertView, parent);
		}
		return convertView;
	}

	/** 封装取图片：含地址和控件参数 */
	public void AsyncImg(String imgUrl, final ImageView imgView) {
		mHttpGetBitmapTool.creatThreadByBitmap(imgUrl, new BitmapNotifi() {
			public void getBitmapByhttp(Bitmap bitmap) {
				imgView.setImageBitmap(bitmap);
			}

			public void getBitmapFail(String resfial) {
				Message msg = Message.obtain();
				msg.obj = imgView;
				msg.what = 1;
				handler.sendMessage(msg);
				
			}
		});
	}
	public void shs(){
		RequestQueue queue = Volley.newRequestQueue();
	}
	public class ItemOneView {
		public ImageView itemOneImg;
		public TextView itemOneTitleTxt;
		public TextView itemOneContentTxt;
		public TextView itemOneFollowTxt;
	}

	public class ItemTwoView {
		public ImageView itemTwoImgOne;
		public ImageView itemTwoImgTwo;
		public ImageView itemTwoImgThree;
		public TextView itemTwoTitleTxt;
		public TextView itemTwoFollowTxt;
	}

}
