package com.example.newsclient.slidingmenu.activity;

import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import me.maxwin.view.XListView;
import me.maxwin.view.XListView.IXListViewListener;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.app.Activity;
import android.graphics.Bitmap;
import android.media.MediaPlayer;
import android.media.MediaPlayer.OnPreparedListener;
import android.os.Bundle;
import android.os.Environment;
import android.util.Log;
import android.view.SurfaceHolder;
import android.view.SurfaceView;
import android.view.View;
import android.view.SurfaceHolder.Callback;
import android.view.View.OnClickListener;
import android.widget.ImageView;
import android.widget.Toast;

import com.android.volley.RequestQueue;
import com.android.volley.Response;
import com.android.volley.VolleyError;
import com.android.volley.toolbox.JsonObjectRequest;
import com.android.volley.toolbox.Volley;
import com.example.newsclient.R;
import com.example.newsclient.adapter.VideoListAdapter;
import com.example.newsclient.adapter.VideoListAdapter.BackView;
import com.example.newsclient.bean.VideoBean;

public class VideoActivity extends Activity implements IXListViewListener {
	private XListView videoXListView;
	private VideoListAdapter videoAdapter;
	private RequestQueue queue;
	private DestroyMediaplayer mDestroyMediaplayer;
	int pageNo = 0; // 页号 ，表示第几页,第一页从0开始
	int pageSize = 10; // 页大小，显示每页多少条数据
	String video_type_id = "V9LG4B3A0"; // 视频类型标识, 此处表示热点视频
	private String url = "http://c.3g.163.com/nc/video/list/" + video_type_id
			+ "/n/" + pageNo * pageSize + "-" + pageSize + ".html";
	private List<VideoBean> mList = new ArrayList<VideoBean>();

	private SurfaceHolder holder;
	private ImageView mImgBtn;
	private ImageView mImgBg;
	private SurfaceView mSurFace;
	private Bitmap Mbitmap;
	private MediaPlayer mMediaplayer = new MediaPlayer();
	private int mPoint;
	private String pathMPF;
	private int allTime;
	
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.sliding_video_main_layout);

		videoXListView = (XListView) findViewById(R.id.sliding_video_xlistview);
		videoAdapter = new VideoListAdapter(this);
		videoXListView.setAdapter(videoAdapter);

		mDestroyMediaplayer = (DestroyMediaplayer) videoAdapter;
		queue = Volley.newRequestQueue(this);
		RefreshData(url);

		videoXListView.setPullRefreshEnable(true);
		videoXListView.setPullLoadEnable(true);
	}

	public void RefreshData(String urls) {
		JsonObjectRequest request = new JsonObjectRequest(urls, null,
				new Response.Listener<JSONObject>() {
					public void onResponse(JSONObject response) {
						JSONData(response);
					}
				}, new Response.ErrorListener() {
					public void onErrorResponse(VolleyError error) {
						Log.i("11", "msg:::" + error.getMessage());
						// Toast.makeText(VideoActivity.this,error.getMessage(),0).show();
					}
				});
		Log.i("11", "刷新wancheng");
		queue.add(request);
	}
	/**实例化适配器里面的控件**/
	public void backIntrerfaceView() {
		videoAdapter.backAdapterView(new BackView() {
			public void backView(SurfaceView surfaceView, ImageView imgBgView,
					ImageView imgBtnView) {
				mSurFace = surfaceView;
				mImgBg = imgBgView;
				mImgBtn = imgBtnView;
				holder = mSurFace.getHolder();
				
				holder.setType(SurfaceHolder.SURFACE_TYPE_PUSH_BUFFERS);
				holder.setKeepScreenOn(true);

				holder.addCallback(new Callback() {
					public void surfaceDestroyed(SurfaceHolder holder) {

					}

					public void surfaceCreated(SurfaceHolder holder) {
						if (mPoint > 0 && mMediaplayer != null) {
							playMPFour(mPoint);
						}
					}

					public void surfaceChanged(SurfaceHolder holder, int format,
							int width, int height) {
						if (mMediaplayer.isPlaying()) {
							mPoint = mMediaplayer.getCurrentPosition();
							mMediaplayer.stop();
						}
					}
				});
			}

			public void backBitmap(Bitmap bitmap) {
				Mbitmap = bitmap;
			}
		});

		mImgBtn.setOnClickListener(new OnClickListener() {
			public void onClick(View v) {
				mImgBg.setVisibility(View.INVISIBLE);
				mImgBtn.setVisibility(View.INVISIBLE);
				refrashPath(videoUrl);
			}
		});
	}

	public void JSONData(JSONObject response) {
		try {
			JSONArray array = response.getJSONArray("V9LG4B3A0");
			int n = array.length();
			for (int i = 0; i < n; i++) {
				JSONObject obj = array.getJSONObject(i);
				VideoBean bean = new VideoBean();
				bean.setCover(obj.getString("cover"));
				bean.setMp4_url(obj.getString("mp4_url"));
				bean.setTitle(obj.getString("title"));
				bean.setDescription(obj.getString("description"));
				bean.setLength(obj.getInt("length"));
				bean.setPlayCount(obj.getString("playCount"));
				bean.setReplyCount(obj.getString("replyCount"));
				mList.add(bean);
			}
			if (pageNo == 0) {
				videoAdapter.setData(mList);
			} else {
				videoAdapter.addData(mList);
			}
			if (pageNo == 20) {
				videoXListView.setPullLoadEnable(false);
			}
			onLoad();
		} catch (JSONException e) {
			e.printStackTrace();
		}

	}

	public void onRefresh() {
		Log.i("11", "刷新");
		pageNo = 0;
		url = "http://c.3g.163.com/nc/video/list/" + video_type_id + "/n/"
				+ pageNo * pageSize + "-" + pageSize + ".html";
		RefreshData(url);
		videoXListView.setPullLoadEnable(true);
	}

	public void onLoadMore() {
		pageNo = pageNo + 10;
		if (pageNo <= 20) {
			url = "http://c.3g.163.com/nc/video/list/" + video_type_id + "/n/"
					+ pageNo * pageSize + "-" + pageSize + ".html";
			RefreshData(url);
		}
	}

	public void onLoad() {
		videoXListView.stopRefresh();
		videoXListView.stopLoadMore();
		videoXListView.setRefreshTime(currentTime());// 时间

	}

	public String currentTime() {
		SimpleDateFormat formatter = new SimpleDateFormat(
				"yyyy年MM月dd日 HH:mm:ss ");
		Date curDate = new Date(System.currentTimeMillis());// 获取当前时间
		String str = formatter.format(curDate);
		return str;
	}

	public interface DestroyMediaplayer {
		public void destroyMediaplayer();
	}

	@Override
	protected void onDestroy() {
		super.onDestroy();
		if(mMediaplayer!=null){
			mMediaplayer.release();
			mMediaplayer =null;
		}
		mDestroyMediaplayer.destroyMediaplayer();
	}
	/** 实例化播放器的相关属性 */
	public void surfaceToMpfour(SurfaceView surfaceView) {
		holder = surfaceView.getHolder();
		holder.setType(SurfaceHolder.SURFACE_TYPE_PUSH_BUFFERS);
		holder.setKeepScreenOn(true);

		holder.addCallback(new Callback() {
			public void surfaceDestroyed(SurfaceHolder holder) {

			}

			public void surfaceCreated(SurfaceHolder holder) {
				if (mPoint > 0 && mMediaplayer != null) {
					playMPFour(mPoint);
				}
			}

			public void surfaceChanged(SurfaceHolder holder, int format,
					int width, int height) {
				if (mMediaplayer.isPlaying()) {
					mPoint = mMediaplayer.getCurrentPosition();
					mMediaplayer.stop();
				}
			}
		});
	}

	/** 判断视频的来源 */
	public void refrashPath(String path) {
		if (path.startsWith("http")) {
			pathMPF = path;
			playMPFour(0);
		} else {
			File file = new File(Environment.getExternalStorageDirectory(),
					path);
			if (file.exists()) {
				pathMPF = file.getAbsolutePath();
				playMPFour(0);
			} else {
				Toast.makeText(this, "视频地址不正确!", 0).show();
			}
		}
	}

	/** 播放 */
	public void playMPFour(int point) {
		try {
			mMediaplayer.reset();
			mMediaplayer.setDataSource(pathMPF);
			mMediaplayer.setDisplay(holder);
			mMediaplayer.prepare();// 缓存
			mMediaplayer.setOnPreparedListener(new OnPreparedListener() {
				public void onPrepared(MediaPlayer mp) {
					mMediaplayer.start();
					if (mPoint > 0) {
						mMediaplayer.seekTo(mPoint);
					}
				}
			});

		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	public void threadMediaplayerOver() {
		boolean temp = true;
		while (temp) {
			new Thread(new Runnable() {
				public void run() {
					if (mPoint == allTime && mImgBtn != null && mImgBg != null
							&& Mbitmap != null) {
						mImgBtn.setImageResource(R.drawable.biz_news_list_icon_video);
						mImgBg.setImageBitmap(Mbitmap);
					}
				}
			}).start();
		}
	}
}
